version: '3.9'

x-typeorm: &typeorm-env
  POSTGRES_HOST: ${POSTGRES_HOST}
  POSTGRES_PORT: ${POSTGRES_PORT}
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_DB: ${POSTGRES_DB}
  JWT_SECRET: ${JWT_SECRET}

volumes:
  postgres_data: {}
  shared-volume:

networks:
  api-network: {}
  authentication-network:
    name: authentication-network
    driver: bridge
    external: false

#---------- SERVICES ----------#
services:

  client_web:
    restart: always
    image: web-frontend
    build: ./web
    ports:
      - ${WEB_PORT}:${WEB_PORT}
    environment:
      WEB_PORT: ${WEB_PORT}
    networks:
      - api-network
    depends_on:
      - client_mobile
      - server
    volumes:
      - shared-volume:/app/public/apk

  client_mobile:
    image: mobile-frontend
    build: ./mobile
    networks:
      - api-network
    depends_on:
      - server
    volumes:
      - shared-volume:/app

  server:
    container_name: backend
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    networks:
      - authentication-network
    volumes:
      - ./backend:/home/node/app
    depends_on:
      - postgres-db
    env_file:
      - .env
    ports:
      - ${API_PORT}:${API_PORT}
    environment:
      <<: *typeorm-env
    entrypoint: [ "npm", "run", "start:dev", "--tsc" ]

  postgres-db:
    image: postgres:14
    container_name: ${POSTGRES_HOST}
    environment:
      <<: *typeorm-env
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    restart: on-failure
    stdin_open: true
    tty: true
    networks:
      - authentication-network
    volumes:
      - postgres_data:/var/lib/postgresql@14/data
